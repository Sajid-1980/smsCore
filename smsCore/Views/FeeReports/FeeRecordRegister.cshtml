@using Models
@using sms.Models
@using Syncfusion.EJ2.Grids
@using smsCore.ViewModels;
@inject StaticResources resources

@{
    ViewBag.Title = "Fee Record Register";
}
<div class="breadcrumbs ace-save-state" id="breadcrumb">
    <ul class="breadcrumb">
        <li>
            <i class="fa fa-home ace-icon home-icon">

            </i>
            <a href="@Url.Action("Index", "Dashboard")">Dashboard</a>
        </li>
        <li class="active">
            <a href="@Url.Action("FeeReports", "Reports")">Fee Report</a>
        </li>
        <li class="active">
            Fee Record Register
        </li>
    </ul>
</div>

<section class="content" id="feeRecordRegister-container">
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header with-border">
                    <h3 class="card-title"><i class="fa fa-search"></i> Select Criteria</h3>
                </div>

                <div class="card-body">
                    <div class="row">
                        <div class="col-12 col-sm-3">
                            <label>Reg No</label>
                            <div class="controls">
                                <input type="text" id="regno" class="form-control" />
                                <span class="fa fa-registered form-control-feedback left" aria-hidden="true"></span>
                            </div>
                        </div>

                        @Html.Partial("_PartialCampusSelector", new PartialCampusViewModels {ParentContainerID = "feeRecordRegister-container", ColCssClass = "col-6 col-sm-4 col-md-3", ShowCampus = true, ShowSession = true, ForSearch = false})

                        <div class="  col-12 col-sm-3 pb-2 mt-2 pt-3 form-group has-feedback">
                            <button type="button" class="btn btnSearchStudent  btn-primary  pull-left sico-button sico-btn" id="btnSearch"><i class="fa fa-search"></i> Search</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-12">
            @{
                var grid = new GridModel
                {
                    GridId="list_rpt_classwise_frr",
                    AddSerialNo=true,
                    AllowPdfExport=true,
                    ReportTitle="Fee Record Registers",
                    Columns=new List<Column> {
                        new Column{ FieldName="AdmissionID", HeaderText="Reg No.", AutoFit=true },
                        new Column{ FieldName="StudentName", HeaderText="Name", AutoFit=true },
                        new Column{ FieldName="ForMonthYear", HeaderText="Month", AutoFit=true },
                        new Column{ FieldName="ReceivedDate", HeaderText="Date", AutoFit=true },
                        new Column{ FieldName="Total", HeaderText="Month", AutoFit=true },
                        new Column{ FieldName="Received", HeaderText="Received", AutoFit=true }
},
                    GridAggregateColumns=new List<GridAggregateColumn> {

                    new GridAggregateColumn() { Field="ReceivedDate", Type="none", GroupFooterTemplate= "Total",FooterTemplate="Total"},
                        new GridAggregateColumn() { Field="Total", Type="Sum", GroupFooterTemplate= "${Sum}",FooterTemplate="${Sum}" },
                        new GridAggregateColumn() { Field="Received", Type="Sum", GroupFooterTemplate= "${Sum}",FooterTemplate="${Sum}"}
                    },

                };
            }
            @Html.Partial("_grid", grid)

            @*@Html.EJS().Grid("list_rpt_fee-record-register").AllowGrouping().Height("auto").Width("auto").ToolbarClick("toolbarClick").AllowExcelExport().AllowPdfExport().ShowColumnMenu().ShowColumnChooser().AllowResizing().Columns(col =>
      {
              col.Template("#sno").HeaderText("S.No").Width("100").TextAlign(TextAlign.Left).Add();
              col.Field("AdmissionID").HeaderText("Reg No").AutoFit(true).TextAlign(TextAlign.Left).Add();
              col.Field("StudentName").HeaderText("Student Name").AutoFit(true).TextAlign(TextAlign.Left).Add();
              col.Field("ForMonthYear").HeaderText("Month").AutoFit(true).TextAlign(TextAlign.Left).Add();
              col.Field("ReceivedDate").HeaderText("Date").AutoFit(true).TextAlign(TextAlign.Left).Add();
              col.Field("Total").HeaderText("Total").AutoFit(true).TextAlign(TextAlign.Left).Add();
              col.Field("Received").HeaderText("Received").AutoFit(true).TextAlign(TextAlign.Left).Add();
          }).AllowFiltering().FilterSettings(filter => { filter.Type(FilterType.CheckBox); }).AllowSorting().AllowPaging().PageSettings(page => page.PageSize(15).PageSizes(new string[] { "15", "30", "50", "All" })).Toolbar(new List<string>
         { "PdfExport", "Print", "ExcelExport", "ColumnChooser", "Search" }).Render();
            <script id="sno" type="text/x-jsrender">
                ${sno(index)}
            </script>*@
        </div>
    </div>
</section>

<script @resources.JavaScript>
    $('#btnSearch').on('click',
        function () {
            if ($('#regno').val() == "") {
                $('#regno').focus();
                return
            }
            var regno = $('#regno').val();
            var url1 = '@Url.Action("GetFeeRecordRegister")';
            url1 += '?CampusId=' + $('#Campus').val() + '&regno=' + regno + '&session=' + $('#Session').val();
            var grid = document.getElementById("@grid.GridId").ej2_instances[0];
            grid.dataSource = [];
            grid.dataSource = new ej.data.DataManager({
                url:url1,
                adaptor: new ejs.data.UrlAdaptor()
            });
        });

    //function toolbarClick(args) {
    //    var gridObj = document.getElementById("list_rpt_fee-record-register").ej2_instances[0];
    //    if (args.item.id === 'list_rpt_fee-record-register_pdfexport') {
    //        gridObj.pdfExport();
    //    }
    //    if (args.item.id === 'list_rpt_fee-record-register_excelexport') {
    //        gridObj.excelExport();
    //    }
    //}
</script>
@Html.EJS().ScriptManager()
@using Models
@using Syncfusion.EJ2.Grids
@using smsCore.ViewModels;
@inject StaticResources resources

        <div class="breadcrumbs ace-save-state" id="breadcrumb">
            <ul class="breadcrumb">
                <li>
                    <i class="fa fa-home ace-icon home-icon">

                    </i>
                    <a href="@Url.Action("Index", "Dashboard")">Dashboard</a>
                </li>
                <li class="active">
                    <a href="@Url.Action("AttendanceReports", "Reports")">Attendance Report</a>
                </li>
                <li class="active">
                    Student Attendances On Leave
                </li>
            </ul>
        </div>


    <section class="content">
        <div class="row">
            <div class="col-12 ">
                <div class="card">
                    <div class="card-header with-border">
                        <h3 class="card-title"><i class="fa fa-search"></i> Select Criteria</h3>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-12 col-sm-3 form-group has-feedback">
                                <label>User</label>
                                <div class="controls">
                                    <div>
                                        @Html.DropDownList("userId", (SelectList)ViewBag.UserList, new { @class = "form-control" })
                                    </div>
                                    <span class="fa fa-user form-control-feedback left" aria-hidden="true"></span>
                                </div>
                            </div>

                            @Html.Partial("_PartialDate", new PartialDateViewModels
                               {
                                   Label = "Date",
                                   ParentContainerID = "adm-date",
                                   ColCssClass = "col-12 col-sm-3",
                                   ShowAltField = false,
                                   DateFieldId = "selectdate",
                                   DateFieldName = "Date",
                                   KeepDataFieldReadOnly = true,
                                   DefaultDate = DateTime.Now,
                               })
                            <div class="col-12 col-sm-3 form-group has-feedback">
                                <label>Attendance Type</label>
                                <div class="controls">
                                    <div>
                                        @Html.DropDownList("attendancetype", (SelectList)ViewBag.AttendanceType, new { @class = "form-control " })
                                    </div>
                                    <span class="fa fa-address-card form-control-feedback left" aria-hidden="true"></span>
                                </div>
                            </div>

                            <div class="col-sm-3 col-12 pb-2 mt-2 pt-3 form-group has-feedback">
                                <button type="button" class="btn btnSearchStudent btn-primary float-right sico-button sico-btn" id="btnSearch"><i class="fa fa-search"></i> Search</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-12">
                @{
                    var grid = new GridModel 
                    {
                        GridId="list_rpt_attendance_leave",
                        AddSerialNo=true,
                        AllowPdfExport=true,
                        ReportTitle="On Leave Students",
                        Columns=new List<Column> {
                        new Column{ FieldName="RegistrationNo", HeaderText="Reg No.", AutoFit=true },
                        new Column{ FieldName="StudentName", HeaderText="Name", AutoFit=true },
                        new Column{ FieldName="Class", HeaderText="Class", AutoFit=true },
                        new Column{ FieldName="Section", HeaderText="Section", AutoFit=true },
                        new Column{ FieldName="AttendanceDate", HeaderText="Date", AutoFit=true },
                        new Column{ FieldName="Attendancetype", HeaderText="Attendance", AutoFit=true },

                        new Column{ FieldName="UserName", HeaderText="User", AutoFit=true },
                        }
                    };
                }
                @Html.Partial("_grid", grid)

                @*@Html.EJS().Grid("GridS").AllowGrouping().Height("auto").Width("auto").AllowExcelExport().AllowPdfExport().ToolbarClick("toolbarClick").ShowColumnMenu().ShowColumnChooser().AllowResizing().Columns(col =>
           {
               //col.Field("SNo").HeaderText("S.No").Width("80").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Left).Add();
               col.Field("RegistrationNo").HeaderText("Reg.No").Width("80").TextAlign(TextAlign.Left).Add();
               col.Field("StudentName").HeaderText("Name").Width("80").TextAlign(TextAlign.Left).Add();
               col.Field("AttendanceDate").HeaderText("Date").Width("80").TextAlign(TextAlign.Left).Add();
               col.Field("Attendancetype").HeaderText("Atype").Width("80").TextAlign(TextAlign.Left).Add();
               col.Field("Class").HeaderText("Class").Width("80").TextAlign(TextAlign.Left).Add();
               col.Field("Section").HeaderText("Section").Width("80").TextAlign(TextAlign.Left).Add();
               col.Field("UserName").HeaderText("UserName").Width("80").TextAlign(TextAlign.Left).Add();
           }).FilterSettings(filter => { filter.Type(FilterType.CheckBox); }).AllowSorting().PageSettings(page => page.PageSize(5)).Toolbar(new List<string> { "PdfExport", "Print", "ExcelExport", "Search", "ColumnChooser" }).Render()*@
          
            </div>
        </div>
    </section>
<script @resources.JavaScript>

    $('#btnSearch').on('click',
        function() {
            var attendancetype = $('#attendancetype').val();
            var userId = $('#userId').val();
            var selectdate = $('#selectdate').val();

            if (selectdate == "") {
                return $('#selectdate').focus();
            }
            var url1 = '@Url.Action("GetAttendancesOnLeaveReport")';
            url1 += '?user=' + userId + '&dates=' + selectdate + '&attendancetype=' + attendancetype;
            $.get(url1,
                null,
                function(data) {
                    console.log(data);
                    var gridObj = document.getElementById("@grid.GridId").ej2_instances[0];
                    // Refreshes the grid data source
                    gridObj.dataSource = (data);
                });
        });
       
    //function toolbarClick(args) {
    //    var gridObj = document.getElementById("GridS").ej2_instances[0];
    //    if (args.item.id === 'GridS_pdfexport') {
    //        gridObj.pdfExport();
    //    }
    //    if (args.item.id === 'GridS_excelexport') {
    //        gridObj.excelExport();
    //    }
    //}

    </script>
    @Html.EJS().ScriptManager()
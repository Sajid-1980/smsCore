@using sms.Models
@model RatingMaster
@inject StaticResources resources


@{
    ViewBag.Title = "Rating Master Entry";

}

<div class="breadcrumbs ace-save-state" id="breadcrumb">
    <ul class="breadcrumb">
        <li>
            <i class="fa fa-home ace-icon home-icon">

            </i>
            <a href="@Url.Action("Index", "Dashboard")">Dashboard</a>
        </li>
        <li class="active">
            Rating Master Entry
        </li>

    </ul>
</div>
<section class="content" id="ratingmaster">
    <div class="row">
        <div class="col-md-5">
            <div class="card">
                <div class="card-header with-border">
                    <h3 class="card-title">Rating Master Creation</h3>
                </div><!-- /.box-header -->
                @*@using (Ajax.BeginForm("RatingMasterEntry", "Payroll", new AjaxOptions {HttpMethod = "POST", OnSuccess = "reloadGridData", OnComplete = "completed", LoadingElementId = "ratingmaster #server-progress", OnBegin = "begin"}, new {id = "ratingmaster"}))
                {*@
                <form asp-action="RatingMasterEntry" asp-controller="Payroll" data-ajax="true" data-ajax-method="post" OnSuccess="reloadGridData" data-ajax-complete="completed" data-ajax-begin="begin" class="form-horizontal form-label-left input_mask" id="ratingmaster" data_reset="true">
                    <div class="card-body">
                        <div class="row">
                            <div class="col-12">
                                <div id="message">
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            @await Html.PartialAsync("_PartialCampusSelector", new PartialCampusViewModels {ParentContainerID = "ratingmaster", ColCssClass = " col-12 col-md-12 ", ShowCampus = true})

                            <div class="col-12 col-md-12">
                                <label>Description</label>
                                <div class="controls">
                                    @Html.TextBoxFor(m => m.Description, new { @class = "form-control", required = "true" })
                                    <span class="fa fa-clipboard form-control-feedback left" aria-hidden="true"></span>
                                    @Html.ValidationMessageFor(m => m.Description)
                                </div>
                            </div>
                            <div class="col-12 col-md-6">
                                <label>Start Date </label>
                                <div class="controls">
                                    @Html.TextBoxFor(m => m.StartDate, new { @class = "form-control", required = "true", type = "date" })
                                    <span class="fa fa-calendar form-control-feedback left" aria-hidden="true"></span>
                                    @Html.ValidationMessageFor(m => m.StartDate)
                                </div>
                            </div>
                            <div class="col-12 col-md-6">
                                <label>Close Date</label>
                                <div class="controls">
                                    @Html.TextBoxFor(m => m.CloseDate, new { @class = "form-control", required = "true", type = "date" })
                                    <span class="fa fa-calendar form-control-feedback left" aria-hidden="true"></span>
                                    @Html.ValidationMessageFor(m => m.CloseDate)
                                </div>
                            </div>
                            <div class="col-12 col-md-6">
                                <label>Year</label>
                                <div class="controls">
                                    @Html.TextBoxFor(m => m.Year, new { @class = "form-control", required = "true", type = "number" })
                                    <span class="fa fa-calendar form-control-feedback left" aria-hidden="true"></span>
                                    @Html.ValidationMessageFor(m => m.Year)
                                </div>

                            </div>
                            <div class="col-12 col-md-6">
                                <label>Nature</label>
                                <div class="controls">
                                    @Html.DropDownListFor(m => m.RatingType, new SelectList(new[] { "Employee Rating", "Event Rating" }, Model == null ? null : "Nature"), new { @class = "form-control has-feedback-left", required = "true" })
                                    <span class="fas fa-user-secret form-control-feedback left" aria-hidden="true"></span>
                                    @Html.ValidationMessageFor(m => m.RatingType)
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="card-footer">
                        <div class="row">
                            <div class="form-group col-12 pb-2 mt-3">

                                <button type="reset" value="New" class="btn btn-primary float-right "><i class="fa fa-refresh mr-1"></i>New</button>
                                <button type="submit" value="Create" class="btn btn-primary float-right">
                                    <i class="fa fa-save mr-2"></i>
                                    <span>
                                        <i id="server-progress" style="display: none;" class=" fa fa-spinner fa-spin "></i>
                                    </span> Save
                                </button>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
        </div>
        <div class="col-md-7">
            <div class="card card-primary">
                <div class="card-header ptbnull">
                    <h3 class="card-title titlefix">Ratings List</h3>
                </div><!-- /.box-header -->
                <div class="card-body">
                    <div class="row">
                        @*<div id="ratingmasterentry-gridContainer" class="col-12">
                        <table id="jqgratingmasterentry" cellpadding="0" cellspacing="0"></table>
                        <div id="jqgpratingmasterentry" style="text-align: center;"></div>
                        </div>*@
                        <div class="col-12">
                            @{
                                var gridmodel = new GridModel()
            {
                GridId = "jqgratingmasterentry",
                Columns = new List<Column>
                            {
                            new Column{FieldName="description",HeaderText="Description",TextAlign=TextAlign.Left},
                            new Column{FieldName="start Date",HeaderText="Start Date",TextAlign=TextAlign.Left},
                            new Column{FieldName="close Date",HeaderText="Close Date",TextAlign=TextAlign.Left},
                            new Column{FieldName="year",HeaderText="Year",TextAlign=TextAlign.Left},
                            new Column{FieldName="",HeaderText="Action"},
                            },
            };
                                @await Html.PartialAsync("_grid",gridmodel)
                            }
                        </div>
                    </div>
                </div>

            </div>
        </div>
    </div>
</section>


<script @resources.JavaScript>
    function reloadGridData() {
        $('#jqgratingmasterentry').trigger('reloadGrid', { current: true, fromserver: true });
    }

    $(function () {
        //$('#jqgratingmasterentry').jqGrid({
        //    //url from wich data should be requested
        //    url: '@Url.Action("GetRatingMasterListForJq")',
        //    //type of data
        //    datatype: 'json',
        //    //url access method type
        //    mtype: 'Post',
        //    //columns names sr, dname, ccode, address1, phone, tname, aname,dcode,ntn,holiday

        //    //            s.ID, s.Description, s.StartDate, s.CloseDate,s.RatingParticipants,s.RatingType,s.Year
        //    //columns model
        //    colModel: [
        //        // { label: 'Id', name: 'Id', index: 'Id', align: 'left',  width: 20, search: true, stype: 'text', searchoptions: {  attr: { title: 'Select Date' } } },
        //        { label: 'Description', name: 'Description', index: 'Description', align: 'left' },
        //        { label: 'Start Date', name: 'StartDate', index: 'StartDate', align: 'left', width: 70 },
        //        { label: 'Close Date', name: 'CloseDate', index: 'CloseDate', align: 'left', width: 70 },
        //        { label: 'Year', name: 'Year', index: 'Year', align: 'left', width: 30 },
        //        { label: 'Action', name: 'action', index: 'action', align: 'center', width: 40 }
        //        //s.Id, s.EmployeeName,s.Cnic,s.Address,s.MobileNo,s.Email,
        //    ],
        //    //caption: 'Rating Master List',
        //    //enable footer
        //    footerrow: false,
        //    userDataOnFooter: false,
        //    //expect object instead of flat array
        //    jsonReader: { repeatitems: false, id: 'Id' },
        //    //pager for grid
        //    pager: $('#jqgpratingmasterentry'),
        //    //number of rows per page
        //    rowNum: 10,
        //    //initial sorting column
        //    sortname: 'Id',
        //    //initial sorting direction
        //    sortorder: 'asc',
        //    //we want to display total records count
        //    viewrecords: true,
        //    height: 'auto',


        //    loadComplete: function () {
        //        var table = this;
        //        setTimeout(function () {
        //            updatePagerIcons(table);
        //        },
        //            0);
        //    },
        //    gridComplete: function () {
        //        $('.ajax').on('click',
        //            function (e) {
        //                e.preventDefault();
        //                var title = $(this).attr('title');
        //                var url = $(this).attr('href');

        //                BootstrapDialog.show({
        //                    title: title,
        //                    message: $('<div />').load(url),
        //                    onhide: function (dialogRef) {

        //                        reloadGridData();
        //                    }
        //                });
        //                return false;
        //            });
        //    }
        //});

        function updatePagerIcons(table) {
            var replacement =
            {
                'ui-icon-seek-first': 'ace-icon fa fa-angle-double-left bigger-140',
                'ui-icon-seek-prev': 'ace-icon fa fa-angle-left bigger-140',
                'ui-icon-seek-next': 'ace-icon fa fa-angle-right bigger-140',
                'ui-icon-seek-end': 'ace-icon fa fa-angle-double-right bigger-140'
            };
            $('.ui-pg-table:not(.navtable) > tbody > tr > .ui-pg-button > .ui-icon').each(function () {
                var icon = $(this);
                var $class = $.trim(icon.attr('class').replace('ui-icon', ''));

                if ($class in replacement) icon.attr('class', 'ui-icon ' + replacement[$class]);
            });
        }

        var DataGrid = $('#jqgratingmasterentry');

        //sets the grid size initially
        DataGrid.jqGrid('setGridWidth', parseInt($('#ratingmasterentry-gridContainer').width()));

        //handles the grid resize on window resize
        $(window).resize(function () {
            DataGrid.jqGrid('setGridWidth', parseInt($('#ratingmasterentry-gridContainer').width()));
        });

    });

            //   });
</script>
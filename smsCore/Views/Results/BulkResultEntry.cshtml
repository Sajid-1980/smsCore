@model List<BulkrResultViewModel>

@using Syncfusion.EJ2.Grids
@inject StaticResources resources

@{
    ViewBag.Title = "BulkResultEntry";
}
<div class="breadcrumbs ace-save-state" id="breadcrumb">
    <ul class="breadcrumb">
        <li>
            <i class="fa fa-home ace-icon home-icon">

            </i>
            <a href="@Url.Action("Index", "Dashboard")">Dashboard</a>
        </li>
        <li class="active">
            Bulk Result Entry
        </li>

    </ul>
</div>

<section class="content" id="resultedit">
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header ptbnull">
                    <a href="https://www.youtube.com/watch?v=vTMiWr-yHTM" title="Watch our Youtube Video to understand" target="_blank" class="btn btn-default btn-sm float-right"><i class="fa fa-question-circle"></i> Help </a>
                </div>
                <div class="card-body">
                    <div class="my-0 py-1">
                        <div class="row  my-0">
                            <div class="col-lg-12">
                            </div>
                            @await Html.PartialAsync("_PartialCampusSelector", new PartialCampusViewModels { ParentContainerID = "resultedit", ColCssClass = "col-12 col-sm-6 col-md", ShowCampus = true, ShowClasses = true,ShowClasseForClassTeacher=false, ShowSections = true, ShowExams = true, ShowSubjects = true })

                            <div class="col-12 col-sm-6 col-md-12 pt-3">
                                <button type="button" id="btnSearchResult" class="btn btn-primary float-right"><i class="fa fa-search mr-2"></i>search</button>
                            </div>
                        </div>

                    </div>
                </div>
            </div>

            <div class="card">
                <div class="card-body">
                    <span style="display: none" class="pull-left control-label pt-1" id="max-marks">No Subject selected</span>
                    <div class="" id="resultPanel">
                        <form asp-action="BulkResultEntry" asp-controller="Results" data-ajax="true" data-ajax-method="POST" data-ajax-complete="completed" data-ajax-begin="begin" data-ajax-loading="#ExamHeldsmainForm #server-progress" id="ExamHeldsmainForm">


                            <div class="row">
                                <div class="col-12">
                                    <div id="message">
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-12">
                                    @{
                                        var gridmodel = new GridModel()
            {

                GridId = "bulkresult",
                Width = "auto",
                Height = "auto",
                Columns = new List<Column>
                                    {
                                    new Column{FieldName="registrationNo",HeaderText="Reg. No",TextAlign=TextAlign.Left,Width="50"},
                                    new Column{FieldName="studentName",HeaderText="Name",TextAlign=TextAlign.Left,Width="80"},
                                    new Column{FieldName="fName",HeaderText="FName",TextAlign=TextAlign.Left,Width="80"},
                                //    new Column{Template="#marks",HeaderText="ObtMarks",TextAlign=TextAlign.Left,Width="50"},
                                    new Column{FieldName="#del",HeaderText="FName",TextAlign=TextAlign.Left,Width="80"},

                                    },
            };
                                    }
                                    @await Html.PartialAsync("_grid",gridmodel)
                                </div>
                                @* <div class="col-12">
                                <div id="message">
                                </div>
                                @Html.EJS().Grid("bulkresult").Height("auto").Width("auto").AllowResizing().Columns(col =>
                                {
                                col.Field("RegistrationNo").HeaderText("Reg. No").Width("50").TextAlign(TextAlign.Left).Add();
                                col.Field("StudentName").HeaderText("Name").Width("80").TextAlign(TextAlign.Left).Add();
                                col.Field("FName").HeaderText("FName").Width("80").TextAlign(TextAlign.Left).Add();
                                col.Template("#marks").HeaderText("ObtMarks").Width("50").TextAlign(TextAlign.Left).Add();
                                //col.Template("#del").HeaderText("Delete").Width("50").TextAlign(TextAlign.Center).Add();

                                }).DataBound("datasourcechanged").DataSourceChanged("datasourcechanged").Render()
                                </div>*@
                                @*<script type="text/x-jsrender" id="del">
                                ${if(Marks>0)}
                                <a href="javascript:void()" data-href="/Results/Delete/${AdmissionId}?examheldid=${ExamId}&classSubjectId=${ClassSubjectId}" onclick="deleteResult(this)">Delete</a>
                                ${/if}
                                </script>*@
                                <script type="text/x-jsrender" id="marks">
                                    <div class="controls">
                                        <input type="hidden" name="[${index}].AdmissionId" value="${AdmissionId}" />
                                        <input type="hidden" name="[${index}].ExamId" value="${ExamId}" />
                                        <input type="hidden" name="[${index}].ClassSubjectId" value="${ClassSubjectId}" />
                                        ${if(Marks==2000)}
                                        <input type="text" name="[${index}].Marks" class="number-mask form-control" value="A" />
                                        ${else if(Marks==-1)}
                                        <input type="text" id="${index}" name="[${index}].Marks" class="number-mask form-control" />
                                        ${else }
                                        <input type="text" id="${index}" name="[${index}].Marks" class="number-mask form-control" value="${Marks}" />
                                        ${/if}
                                        <span class="fa fa-calculator form-control-feedback left" aria-hidden="true"></span>
                                    </div>
                                </script>
                                <div class="col-12 mt-3">
                                    <button type="submit" id="btnSave" class="btn btn-primary pull-right"><i class="fa fa-save mr-2"></i>Save</button>
                                </div>
                            </div>
                        </form>

                    </div>
                    <div class="hidden" id="SubjectDetails">
                    </div>
                </div>
            </div>
        </div>

    </div>
</section>

<script @resources.JavaScript>

    //function deleteResult(me)
    //{
    //    var url = $(this).attr('data-href');

    //    sweetalertWithUrl('Are you sure to delete?', url, true);
    //}
    $("#ExamHeldsmainForm").validate();
    var mxMarks = 0

    jQuery.validator.addMethod("greaterThanMax", function (value, element) {
        return value == 'a' || value == 'A' || this.optional(element) || (parseFloat(value) <= mxMarks & parseFloat(value) >= 0);
    }, function () { return "Marks must be between 0-" + mxMarks });

    $.validator.addClassRules("number-mask", {
        greaterThanMax: true
    });


    $('#btnSearchResult').click(function () {
        var gridList = document.getElementById("bulkresult").ej2_instances[0];
        gridList.dataSource = ([]);
        var campus = $('#Campus').val();
        var cls = $('#Classes').val();
        var exam = $('#Exams').val();
        var subject = $('#Subjects').val();
        var sectionId = $('#Sections').val();

        var url1 = '@Url.Action("GetBulkResultOfSubject")';
        url1 += '?myclass=' + cls + '&campus=' + campus + '&sectionId=' + sectionId + '&exam=' + exam + '&subject=' + subject;
        $.get(url1,
            null,
            function (data) {
                var url = `/Exams/DateSheetEntry?examId=${exam}&campusId=${campus}&classId=${cls}&sectionId=${sectionId}`;
                if (data.DateSheetDouble) {
                    ConfirmNavigate(url, 'More then one datesheet found for selected subject. Would you like to navigate to Datesheet page to edit.')
                }
                if (data.MaxMark) {
                    ConfirmNavigate(url, 'No datesheet found for selected subject. Would you like to navigate to Datesheet page to edit.')
                }
                if (data.MaxMark) {
                    ConfirmNavigate(url, 'The Total Marks for selected subject in datesheet is invalid. Would you like to navigate to Datesheet page to edit.')
                }
                else
                    gridList.dataSource = (data);
            });
    });


    function datasourcechanged(e) {

        let maxmarks = ($(this)[0]?.currentViewData[0]?.MaxMarks);
        if (maxmarks > 0) {
            mxMarks = maxmarks;
            //$('.number-mask').attr('min',0).attr('max',maxmarks);
        }
    }
</script>

@model Models.LibraryBookRecord
@inject StaticResources resourse;
@{
    ViewBag.Title = "EditBookRecord";
}

@*@using (Ajax.BeginForm("EditBookRecord", "Library", new AjaxOptions {HttpMethod = "POST", OnComplete = "completed", LoadingElementId = "EditLibraryRecordForm #server-progress", OnBegin = "begin"}, new {id = "EditLibraryRecordForm", enctype = "multipart/form-data"}))
{

 *@
<form asp-action="EditBookRecord" asp-controller="Library" data-ajax="true" data-ajax-method="post" enctype="multipart/form-data" data-ajax-complete="completed" data-ajax-begin="begin" class="form-horizontal form-label-left input_mask" id="EditLibraryRecordForm" data_reset="true">
  
 
 @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)


    <div class="row">
        <div class="col-12">
            <div id="message">

            </div>
        </div>
    </div>
    <div class="card">
        <div class="card-header">
            <h3 class="text-primary">Edit Book Record</h3>
        </div>
        <div class="card-body">
            <div class="row">

                @Html.HiddenFor(model => model.ID)
                <div class="col-12 col-sm-6  has-feedback">
                    <label>Library Id <font class="text-danger">*</font></label>
                    <div  class="controls">
                        @Html.DropDownListFor(model => model.LibraryId, (SelectList)ViewBag.LibraryId, new { @class = "form-control has-feedback-left" })
                        <span class="fa fa-phone form-control-feedback left" aria-hidden="true"></span>
                        @Html.ValidationMessageFor(model => model.LibraryId)
                    </div>
                </div>
                <div class="col-12 col-sm-6  has-feedback">
                    <label>Library Book List ID <font class="text-danger">*</font></label>
                    <div  class="controls">
                        @Html.DropDownListFor(model => model.LibraryBookListId, (SelectList)ViewBag.LibraryBookListId, new { @class = "form-control has-feedback-left" })
                        <span class="fa fa-mobile form-control-feedback left" aria-hidden="true"></span>
                        @Html.ValidationMessageFor(model => model.LibraryBookListId)
                    </div>
                </div>
                <div class="col-12 col-sm-6 mt-3 has-feedback">
                    <label>Shelf No <font class="text-danger">*</font></label>
                    <div  class="controls">
                        @Html.TextBoxFor(model => model.ShelfNo, new { @class = "form-control has-feedback-left", required = "true", type = "text" })
                        <span class="fa fa-mobile form-control-feedback left" aria-hidden="true"></span>
                        @Html.ValidationMessageFor(model => model.ShelfNo)
                    </div>
                </div>

                <div class="col-12 col-sm-6 mt-3 has-feedback">
                    <label>Entry Date <font class="text-danger">*</font></label>
                    <div  class="controls">
                        @Html.TextBoxFor(model => model.EntryDate, new { @class = "date form-control has-feedback-left", required = "true", id = "EntryDatess" })
                        <span class="fa fa-mobile form-control-feedback left" aria-hidden="true"></span>
                        @Html.ValidationMessageFor(model => model.EntryDate)
                    </div>
                </div>

            </div>

            <div class="row">
                <div class="col-12">
                    <button type="submit" value="Create" name="Update" id="updatebtn" class="btn btn-primary float-right mt-4 mr-2 m-md-2">
                        <i class="fa fa-save mr-2"></i>
                        <span>
                            <i id="server-progress" style="display: none;" class=" fa fa-spinner fa-spin "></i>
                        </span> Save
                    </button>
                </div>
            </div>

        </div>
    </div>
</form>
<script @resourse.JavaScript>
    $(function() {
        $('.date').inputmask({ mask: '99/99/9999' });
        $(".date").datepicker({
            showOtherMonths: true,
            selectOtherMonths: true,
            showAnim: "clip",
            dateFormat: "dd/mm/yy",
            changeMonth: true,
            changeYear: true,
            defaultDate: new Date(),
            yearRange: "-50:+0"
        });

        $(".date").on('change', function() {
            var val = $(this).val();
            try {
                var mo = moment(val, 'YYYY-MM-DD');
                if (mo._d == 'Invalid Date') {
                    $(this).closest('div').append('<span class="nosubmit conversion-error text-danger">Please select a valid date</span>');
                } else {
                    $(this).closest('div').find('.conversion-error').remove();
                }
                //console.log(mo)
                //alert('converted',mo);
            } catch{
                alert('conversion error');
        };
    });
    $('#EntryDatess').datepicker('setDate', new Date('@Model.EntryDate'));
    });

</script>
@*@using Microsoft.Owin.Security*@
@using Microsoft.AspNetCore.Authentication;
@using Microsoft.AspNetCore.Authorization;
@model  ExternalLoginListViewModel
@inject LoggedInUserHelper _helper;

<h4>Use another service to log in.</h4>
<hr/>
@{
    //var loginProviders = Context.GetOwinContext().Authentication.GetExternalAuthenticationTypes();
    //var loginProviders = await Context.AuthenticateAsync().GetType();
    //var loginProviders = Context.AuthenticateAsync();


    //@if (loginProviders.Count == 0)
    //{
    //    <div>
    //        <p>
    //            There are no external authentication services configured. See <a href="https://go.microsoft.com/fwlink/?LinkId=403804">this article</a>
    //            for details on setting up this ASP.NET application to support logging in via external services.
    //        </p>
    //    </div>
    //}
    //else
    //{
    //    using (Html.BeginForm("ExternalLogin", "Account", new { ReturnUrl = Model.ReturnUrl }))
    //    {
    //        @Html.AntiForgeryToken()
    //        <div id="socialLoginList">
    //            <p>
    //                @foreach (var p in loginProviders)
    //                {
    //                    <button type="submit" class="btn btn-default" id="@p.AuthenticationScheme" name="provider" value="@p.AuthenticationScheme" title="Log in using your @p.DisplayName account">@p.DisplayName</button>
    //                }
    //            </p>
    //        </div>
    //    }
    }

}